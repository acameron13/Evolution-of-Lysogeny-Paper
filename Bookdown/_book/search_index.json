[["index.html", "Evolution of Lysogeny Supplemental Materials Chapter 1 Introduction 1.1 About our supplemental material 1.2 Contributing Authors 1.3 Research Overview", " Evolution of Lysogeny Supplemental Materials Alison Cameron, Seth Dorchen, and Anya Vostinar 2021-10-05 Chapter 1 Introduction This book contains all supplemental materials for the evolution of lysogeny paper. 1.1 About our supplemental material Our supplemental materials include the following: R scripts System configuration settings Graphs not included in our paper 1.2 Contributing Authors Anya Vostinar Alison Cameron Seth Dorchen 1.3 Research Overview 1.3.1 Abstract Bacteriophages, viruses that target bacteria, are found everywhere in nature. Phages play vital roles in their microbiomes as a result of selective pressure that they place on their hosts. As obligate symbionts, phages depend on bacteria for successful reproduction, and either destroy their hosts through lysis or potentially increase host fitness through lysogeny. Lysis involves reproduction within the host membrane and the eventual bursting of the cell to release their progeny. Alternatively, lysogeny is the process by which phage DNA is inserted into the host DNA, and thus the phage reproduces when their host reproduces. As such, phages exist along the parasitism-mutualism spectrum, prompting the questions of how and why phage would evolve one reproductive strategy over the other. In our agent-based model, we found that a viral population with beneficial lysogenic phage can select against lytic strategies. This result has important implications for bottom-up control of various ecosystems. 1.3.2 Experiments The following chapters of this book represent the main experiments conducted for our research. We implemented two features of focus: induction into the lytic cycle and the impact that a prophage can have on host metabolism. The first two experiments explore these features independently of one another (Chapter 4 being host metabolism impact only without induction and Chapter 5 being induction without any impact on host metabolism). The next two chapters investigate the impact of both of these features on the co-evolution of viruses and bacteria. Chapter 7 shows the data for the maintaining of harmful/neutral/beneficial phage populations by starting with fixed populations, while Chapter 8 shows the data for the de novo evolution of harmful/neutral/beneficial phage by starting with random populations. Our primary findings are shown in Chapter 7. 1.3.3 Results Our results show that even in conditions that would typically select for a lytic phage population, the potential for prophage to have a positive impact on host metabolism leads to the evolution on more temperate populations. This result is primarily shown in the mean chance of lysis plot in Chapter 7. This result has important implications for the construction of microbiomes and thus ecosystems in general. "],["data-availability.html", "Chapter 2 Data Availability 2.1 Source Code 2.2 Experimental Results", " Chapter 2 Data Availability 2.1 Source Code Our source code is available here. 2.2 Experimental Results The scripts to regenerate all data can be found here. "],["configuration-settings.html", "Chapter 3 Configuration Settings 3.1 Experimental Settings 3.2 Other Relevant Settings", " Chapter 3 Configuration Settings All configuration settings used for each experiment can be found in the supplemental materials data folders in the file titled SymSettings.cfg. The following settings are the focus of our experiments. 3.1 Experimental Settings The following settings were changed for various experiments. The values used can be found in simple_repeats.py or in SymSettings.cgf. LYSIS_CHANCE represents the chance of lysis for the original population of phage. For some experiments this was a random distribution (indicated by a value of -1), and for others we started the population at lysogenic (0), temperate (0.5), or lytic (1). PROPHAGE_LOSS_RATE represents the chance that a lysogenic phage will be killed off during an update. This functions to provide and influx of susceptible hosts for other phage to infect. We use three values throughout our experiments: 0.0, 0.025, and 0.05. 0 typically selects for lysogenic phage, 0.025 for temperate phage, and 0.05 for lytic phage. BENEFIT_TO_HOST is a switch that allows lysogenic phage to interact with their hosts resources. We toggle this switch across different experiments to explore its effect on the selection of lysis vs. lysogeny. PHAGE_INC_VAL interacts with the HOST_INC_VAL to determine how well the bacteriophage and host bacterium are a match for each other. This is done by computing the difference between the two incorporation values; the smaller the difference, the more helpful a phage is to its host. This is an abstract representation of the insertion of phage DNA into bacterial DNA, and how successful that may be. HOST_INC_VAL was held constant at 1 for all experiments, while the PHAGE_INC_VAL was either 0 (harmful), 0.5 (neutral), or 1 (beneficial). 3.2 Other Relevant Settings The following settings were kept constant for all experiments run for this paper, but these settings differ from the defaults. MUTATION_SIZE indicates the size of the standard deviation of mutations. In this paper, we used a mutation size of 0.02. SYNERGY indicates the extent to which a lysogenic phage can influence its hosts resources, whether diminishing them or increasing them. A value of 2, used in all our experiments, means that the lysogenic phage could up to double their hosts resources. A value of 3 would mean a lysogenic phage could potentially triple the resources, 4 would quadruple, etc. VERTICAL_TRANSMISSION represents the rate at which a hosted phage would be permitted to pass down an offspring to its hosts offspring. However, all lysogenic phage have a 100% chance of vertical transmission regardless of the configuration setting. In a lytic world, this configuration setting only influences the vertical transmission rate for lytic phage. We used a value of 0 for all experiments, forcing lytic phage to rely on bursting for their reproduction. RES_DISTRIBUTE represents the number of resources given to each host during each update. We distributed 50 resource point to each host upon each update. HOST_REPRO_RES represents the number of resource points needed for hosts to reproduce. We used a value of 600. LYSIS indicates whether the world will include phage and bacteriums. This switch is turned on for all experiments. CHANCE_OF_INDUCTION represents the chance that a lysogenic phage will induce and begin the lytic cycle. While this chance is an integral part of the biological system, it is so small that it is close to neglible. As such, we start all phage with a 0% chance of induction while allowing it to mutate in order to observe how it evolves. MUTATE_LYSIS_CHANCE is a switch that indicates whether or not the chance of lysis for phage offspring should be mutated from their parents chance of lysis. We permitted lysis chance mutations for all experiments. SYM_LIMIT indicates how many phage can infect a singular host. We only allow one phage per host and thus use a value of 1. MUTATE_INDUCTION_CHANCE is a switch that determines whether or not the chance of induction will mutate for phage offspring. This switch is turned on for our experiments. BURST_TIME acts as a timer that determines how long it takes for a lytic phage to burst. Each lytic phages burst timer is incremented (from a normal distribution centered at 1 with a standard deviation of 1) every update. Once the phages burst timer reaches this configuration setting as a threshold, the phage offspring are released into the world and the host bacterium dies. We use a value of 100 for all experiments. HOST_INC_VAL represents the compatibility of bacterial hosts with lysogenic phage to decide the impact of prophage DNA incorporation on the host metabolism. We keep the HOST_INC_VAL at a value of 1 for all experiments. MUTATE_INC_VAL is a switch that determines whether or not the phage and host incorporation values will mutate for both populations. Mutations are turned on for all experiments. SYM_LYSIS_RES represents the amount of resources that a lytic phage requires to reproduce once within the host prior to bursting. Given enough resources, a lytic phage can reproduce multiple times before lysing the host cell. START_MOI represents the initial ratio of the symbiont population to the bacteria population. During experimentation we set the START_MOI to 0.5 and let the population grow to a multiplicity of infection ratio of 1. FREE_LIVING_SYMS is a switch representing whether or not the phage can live outside of their hosts. While phage require a bacterium to reproduce, this determines if they can survive during their lifetime without being hosted. For all experiments, we allow symbionts to live outside of their hosts if they choose to do so. "],["template-for-munging-data-and-creating-graphs.html", "Chapter 4 Template for Munging Data and Creating Graphs 4.1 Load Data Munging Functions 4.2 Gather Settings and Treatments 4.3 Collect and Munge Data 4.4 Create graphs", " Chapter 4 Template for Munging Data and Creating Graphs The following is a basic outline of how we used R to munge data and generate graphs 4.1 Load Data Munging Functions For a particular treatment, extract the value for the data from the filename using string manipulation get_treatment_val &lt;- function(filename, treatment_name){ #Input: a filename string and a string representing which treatment you are looking for # Ex: &quot;HostVals_VT0.6_SEED10.data&quot; and &quot;VT&quot; #Output: A string representing the value for the given treatment # Ex: &quot;0.6&quot; number_pattern &lt;- &quot;[\\\\d][._][\\\\d]*&quot; treatment_pattern &lt;- str_c(c(treatment_name, number_pattern), sep=&quot;&quot;, collapse=&quot;&quot;) treatment &lt;- str_extract(filename, treatment_pattern) treatment_val &lt;- NA decimal_pattern &lt;- &quot;[\\\\d].[\\\\d]+&quot; integer_pattern &lt;- &quot;[\\\\d]+&quot; if(str_detect(treatment, &quot;\\\\.&quot;)){ treatment_val &lt;- str_extract(treatment, decimal_pattern) } else { treatment_val &lt;- str_extract(treatment, integer_pattern) } full_treatment &lt;- str_c(c(treatment_name, &quot; &quot;, treatment_val), sep=&quot;&quot;, collapse=&quot;&quot;) full_treatment } Retrieve the dataset for a particular filename, adding columns for each treatment get_data &lt;- function(filename, folder, treatments){ #Input: A datafile name as a string, the folder where the data is located, and a list of treatment names # Ex: &quot;HostVals_VT0.6_SEED10.data&quot;, &quot;VertTrans_Data/&quot;, and c(&quot;VT&quot;) #Output: A tibble containing all data in the file with a column added for the Seed and for all treatment names # Ex: The columns added for the above data would be SEED with all values at 10 and # VT with all values at 0.6 seed &lt;- str_extract(filename, &quot;SEED[\\\\d]+.&quot;) seed_val &lt;- str_extract(seed, &quot;[\\\\d]+&quot;) full_filename &lt;- str_c(c(folder, filename), sep=&quot;&quot;, collapse=&quot;&quot;) data &lt;- read_csv(full_filename) %&gt;% mutate(SEED = seed_val) for (i in c(1:length(treatments))){ data &lt;- data %&gt;% mutate(!!treatments[i] := as.factor(get_treatment_val(filename, treatments[i]))) } data } For all files of a particular type (e.g. HostVals), create one dataset that can be used for time series graphs combine_time_data &lt;- function(filenames, folder, treatments){ #Input: A list of relevant datafile names, the folder where the data is, and a list of treatment names # Ex: c(&quot;HostVals_VT0.6_SEED10.data&quot;, &quot;HostVals_VT0.8_SEED10.data&quot;), &quot;VertTrans_Data/&quot;, # and c(&quot;VT&quot;) #Output: A tibble with all data from all datafiles given, with columns added for the seed and # all treatment names all_data &lt;- get_data(filenames[1], folder, treatments) if(length(filenames) &gt; 1){ for (i in c(2:length(filenames))){ add_data &lt;- get_data(filenames[i], folder, treatments) all_data &lt;- full_join(all_data, add_data) } } all_data %&gt;% mutate(SEED = as.factor(SEED)) } Take the time series data and turn it into a format that can be used for stacked histograms combine_histogram_data &lt;- function(time_data, separate_by, bins){ #Input: The time series data produced by combine_time_data, the column name # which the stacked histogram will be facet wrapped by, # and 1:1 list for the desired names of histogram bins # Ex: lysischances, &quot;PLR&quot;, and # lysis_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Highly lysogenic)&quot;, # Hist_0.1 = &quot;0 to 0.2 (Highly lysogenic)&quot;, # Hist_0.2 = &quot;0.2 to 0.4 (Moderately lysogenic)&quot;, # Hist_0.3 = &quot;0.2 to 0.4 (Moderately lysogenic)&quot;, # Hist_0.4 = &quot;0.4 to 0.6 (Temperate)&quot;, # Hist_0.5 = &quot;0.4 to 0.6 (Temperate)&quot;, # Hist_0.6 = &quot;0.6 to 0.8 (Moderately lytic)&quot;, # Hist_0.7 = &quot;0.6 to 0.8 (Moderately lytic)&quot;, # Hist_0.8 = &quot;0.8 to 1.0 (Highly lytic)&quot;, # Hist_0.9 = &quot;0.8 to 1.0 (Highly lytic)&quot;) #Output: A tibble with 4 columns: update, treatment, Histogram_bins, and count. # This is the format needed to create a stacked histogram. #collect initial data and pivot longer initial_data &lt;- time_data %&gt;% pivot_longer( cols = starts_with(&quot;Hist_&quot;), names_to = &quot;Histogram_bin&quot;, values_to = &quot;Bin_count&quot; ) %&gt;% mutate(Histogram_bin = as.factor(Histogram_bin)) #collapse the bins collapsed_data &lt;- initial_data collapsed_data$Histogram_factor &lt;- dplyr::recode(collapsed_data$Histogram_bin, !!!bins) #aggregate the counts collapsed_data &lt;- collapsed_data %&gt;% mutate(count = Bin_count, treatment = get(separate_by)) %&gt;% select(treatment, update, Histogram_factor, count) final_data &lt;- aggregate(list(count = collapsed_data$count), list(update = collapsed_data$update, treatment = collapsed_data$treatment, Histogram_bins = collapsed_data$Histogram_factor), sum) final_data } 4.2 Gather Settings and Treatments General settings folder &lt;- &quot;Data/&quot; #Folder where datafiles are treatments &lt;- c(&quot;PLR&quot;, &quot;COI&quot;) #Names of the treatments being tested - should match what is in filenames Stacked histogram settings #separate_by vals indicate what the stacked histograms should be facet wrapped by separate_by &lt;- &quot;SEED&quot; #How stacked histogram bins should be collapsed and renamed histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (First bin)&quot;, Hist_0.1 = &quot;0 to 0.2 (First bin)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Second bin)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Second bin)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Third bin)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Third bin)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Fourth bin)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Fourth bin)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Fifth bin)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Fifth bin)&quot;) 4.3 Collect and Munge Data Gather filenames all_filenames &lt;- list.files(folder) hostval_filenames &lt;- str_subset(all_filenames, &quot;HostVals&quot;) symvals_filenames &lt;- str_subset(all_filenames, &quot;SymVals&quot;) Combine time series data for all subsets of datafiles hostvals &lt;- combine_time_data(hostval_filenames, folder, treatments) symvals &lt;- combine_time_data(phagevals_filenames, folder, treatments) Rearrange time series data into stacked histogram data symval_histdata &lt;- combine_histogram_data(symvals, separate_by, histogram_bins) 4.4 Create graphs 4.4.1 Graph templates Time Series template #All values with this format: &lt;VAL_NAME&gt; need to be filled in timeseries_graph &lt;- ggplot(data= &lt;TIME_SERIES_DATASET_NAME&gt;, aes(x=update, y= &lt;Y_AXIS_VAL&gt;, group=&lt;GROUP_VAL_NAME&gt;, colour=&lt;GROUP_VAL_NAME&gt;)) + ylab(&lt;Y_AXIS_LABEL&gt;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=&lt;GROUP_VAL_NAME&gt;, fill=&lt;GROUP_VAL_NAME&gt;), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(&lt;TIME_SERIES_DATASET_NAME&gt;$&lt;GROUP_VAL_NAME&gt;))) + scale_fill_manual(values=viridis(nlevels(&lt;TIME_SERIES_DATASET_NAME&gt;$&lt;GROUP_VAL_NAME&gt;))) #Facet wrapping is optional, but can be used if multiple treatments are being used timeseries_graph + facet_wrap(&lt;GROUP_VAL2_NAME&gt;) Stacked Histogram template #All values with this format: &lt;VAL_NAME&gt; need to be filled in stackedhistogram &lt;- ggplot(data = &lt;HISTOGRAM_DATASET_NAME&gt;, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&lt;Y_AXIS_LABEL&gt;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&lt;LEGEND_TITLE&gt;,values=viridis(nlevels(&lt;HISTOGRAM_DATASET_NAME&gt;$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) stackedhistogram 4.4.2 Examples Host count hostcount_plot &lt;- ggplot(data=hostvals, aes(x=update, y=count, group=PLR, colour=PLR)) + ylab(&quot;Host Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostcount_plot + facet_wrap(~COI) Sym interaction vals plot symintval_plot &lt;- ggplot(data=symvals, aes(x=update, y=mean_intval, group=PLR, color=PLR)) + ylab(&quot;Symbiont Interaction value&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(symvals$PLR))) + scale_fill_manual(values=viridis(nlevels(symvals$PLR))) symintval_plot + facet_wrap(~COI) Sym interaction vals stacked histogram symval_stackedhistogram &lt;- ggplot(symval_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Symbionts with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Interaction Val\\n Phenotypes&quot;,values=viridis(nlevels(symval_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) symval_stackedhistogram "],["benefit-only---induction-off.html", "Chapter 5 Benefit Only - Induction off 5.1 Gather Settings and Treatments 5.2 Collect and Munge Data 5.3 Generate Graphs", " Chapter 5 Benefit Only - Induction off The following includes the R scripts that we used to generate our graphs for the data where the potential benefit to the hosts of lysogenic phage was turned on, but induction was turned off. 5.1 Gather Settings and Treatments General settings folder &lt;- &quot;Data/BenefitOnly/&quot; #Folder where datafiles are treatments &lt;- c(&quot;PLR&quot;, &quot;PIV&quot;) #Names of the treatments being tested - should match what is in filenames Stacked histogram settings lysis_separate_by &lt;- &quot;PIV&quot; #Facet wrap lysis chance stacked histogram by Prophage Loss Rate #How lysis chance stacked histogram bins should be collapsed and renamed lysis_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Highly lysogenic)&quot;, Hist_0.1 = &quot;0 to 0.2 (Highly lysogenic)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Moderately lysogenic)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Moderately lysogenic)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Temperate)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Temperate)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Moderately lytic)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Moderately lytic)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Highly lytic)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Highly lytic)&quot;) incorp_diff_separate_by &lt;- &quot;PIV&quot; incorp_diff_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Highly beneficial)&quot;, Hist_0.1 = &quot;0 to 0.2 (Highly beneficial)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Moderately beneficial)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Moderately beneficial)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Neutral)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Neutral)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Moderately detrimental)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Moderately detrimental)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Highly detrimental)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Highly detrimental)&quot;) 5.2 Collect and Munge Data Gather filenames all_filenames &lt;- list.files(folder) freeliving_filenames &lt;- str_subset(all_filenames, &quot;FreeLivingSyms&quot;) hostval_filenames &lt;- str_subset(all_filenames, &quot;HostVals&quot;) incvaldiffs_filenames &lt;- str_subset(all_filenames, &quot;IncValDifferences&quot;) lysischance_filenames &lt;- str_subset(all_filenames, &quot;LysisChance&quot;) phagevals_filenames &lt;- str_subset(all_filenames, &quot;SymVals&quot;) Combine time series data for all subsets of datafiles freeliving &lt;- combine_time_data(freeliving_filenames, folder, treatments) hostvals &lt;- combine_time_data(hostval_filenames, folder, treatments) incvalsdiffs &lt;- combine_time_data(incvaldiffs_filenames, folder, treatments) lysischances &lt;- combine_time_data(lysischance_filenames, folder, treatments) phagevals &lt;- combine_time_data(phagevals_filenames, folder, treatments) Rearrange time series data into stacked histogram data lysis_histdata &lt;- combine_histogram_data(lysischances, lysis_separate_by, lysis_histogram_bins) incorp_diff_histdata &lt;- combine_histogram_data(incvalsdiffs, incorp_diff_separate_by, incorp_diff_histogram_bins) 5.3 Generate Graphs 5.3.1 Host graphs Host count hostcount_plot &lt;- ggplot(data=hostvals, aes(x=update, y=count, group=PLR, colour=PLR)) + ylab(&quot;Host Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostcount_plot + facet_wrap(~PIV) Host cfu count hostcount_cfu_plot &lt;- ggplot(data=hostvals, aes(x=update, y=cfu_count, group=PLR, colour=PLR)) + ylab(&quot;Host CFU Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostcount_cfu_plot + facet_wrap(~PIV) Host uninfected count host_uninfected_plot &lt;- ggplot(data=hostvals, aes(x=update, y=uninfected_host_count, group=PLR, colour=PLR)) + ylab(&quot;Uninfected Host Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) host_uninfected_plot + facet_wrap(~PIV) Host int vals hostvals_plot &lt;- ggplot(data=hostvals, aes(x=update, y=mean_intval, group=PLR, colour=PLR)) + ylab(&quot;Mean Host Interaction Value&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostvals_plot + facet_wrap(~PIV) ## Warning: Removed 5218 rows containing non-finite values (stat_summary). 5.3.2 Phage graphs Phage count phagecount_plot &lt;- ggplot(data=lysischances, aes(x=update, y=count, group=PLR, color=PLR)) + ylab(&quot;Phage count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(lysischances$PLR))) + scale_fill_manual(values=viridis(nlevels(lysischances$PLR))) phagecount_plot + facet_wrap(~PIV) Phage int val phageintval_plot &lt;- ggplot(data=phagevals, aes(x=update, y=mean_intval, group=PLR, color=PLR)) + ylab(&quot;Phage Interaction value&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(phagevals$PLR))) + scale_fill_manual(values=viridis(nlevels(phagevals$PLR))) phageintval_plot + facet_wrap(~PIV) Chance of lysis lysischances &lt;- lysischances %&gt;% mutate(phage_type = as.factor(ifelse(PIV == &quot;PIV 0.0&quot;, &quot;A - Harmful Phage&quot;, ifelse(PIV == &quot;PIV 0.5&quot;, &quot;B - Neutral Phage&quot;, &quot;C - Beneficial Phage&quot;)))) %&gt;% mutate(ProphageDeathRate = as.factor(ifelse(PLR == &quot;PLR 0.0&quot;, &quot;0.0&quot;, ifelse(PLR == &quot;PLR 0.025&quot;, &quot;0.025&quot;, &quot;0.05&quot;)))) lysischances_plot &lt;- ggplot(data=lysischances, aes(x=update, y=mean_lysischance, group=ProphageDeathRate, color=ProphageDeathRate)) + ylab(&quot;Mean Chance of Lysis&quot;) + xlab(&quot;Evolutionary Time (Updates)&quot;) + stat_summary(aes(color=ProphageDeathRate, fill=ProphageDeathRate), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(lysischances$ProphageDeathRate))) + scale_fill_manual(values=viridis(nlevels(lysischances$ProphageDeathRate))) lysischances_plot + facet_wrap(~phage_type) Mean difference in incorporation vals incorp_diff_plot &lt;- ggplot(data=incvalsdiffs, aes(x=update, y=mean_incval_difference), group=PLR, color=PLR) + ylab(&quot;Mean difference in inc vals&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(incvalsdiffs$PLR))) + scale_fill_manual(values=viridis(nlevels(incvalsdiffs$PLR))) incorp_diff_plot + facet_wrap(~PIV) ## Warning: Removed 5497 rows containing non-finite values (stat_summary). 5.3.3 Stacked Histograms Chance of lysis stacked histogram lysischance_stackedhistogram &lt;- ggplot(lysis_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Phage with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Chance of Lysis\\n Phenotypes&quot;,values=viridis(nlevels(lysis_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) lysischance_stackedhistogram Difference in inc vals stacked histogram incorp_diff_stackedhistogram &lt;- ggplot(incorp_diff_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Phage with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Difference in \\n Incorporation Vals&quot;, values=viridis(nlevels(incorp_diff_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) incorp_diff_stackedhistogram "],["induction-only---benefit-off.html", "Chapter 6 Induction Only - Benefit Off 6.1 Gather Settings and Treatments 6.2 Collect and Munge Data 6.3 Generate Graphs", " Chapter 6 Induction Only - Benefit Off The following includes the R scripts that we used to generate our graphs for the data where induction was possible for lysogenic phage, but the potential benefit to the hosts of lysogenic phage was turned off. 6.1 Gather Settings and Treatments General settings folder &lt;- &quot;Data/InductionOnly/&quot; #Folder where datafiles are treatments &lt;- c(&quot;PLR&quot;, &quot;COI&quot;) #Names of the treatments being tested - should match what is in filenames Stacked histogram settings induction_separate_by &lt;- &quot;PLR&quot; #Facet wrap induction stacked histogram by Prophage Loss Rate #How induction stacked histogram bins should be collapsed and renamed induction_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Very low induction)&quot;, Hist_0.1 = &quot;0 to 0.2 (Very low induction)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Moderately low induction)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Moderately low induction)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Moderate induction)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Moderate induction)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Moderately high induction)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Moderately high induction)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Very high induction)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Very high induction)&quot;) lysis_separate_by &lt;- &quot;PLR&quot; #Facet wrap lysis chance stacked histogram by Prophage Loss Rate #How lysis chance stacked histogram bins should be collapsed and renamed lysis_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Highly lysogenic)&quot;, Hist_0.1 = &quot;0 to 0.2 (Highly lysogenic)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Moderately lysogenic)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Moderately lysogenic)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Temperate)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Temperate)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Moderately lytic)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Moderately lytic)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Highly lytic)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Highly lytic)&quot;) 6.2 Collect and Munge Data Gather filenames all_filenames &lt;- list.files(folder) freeliving_filenames &lt;- str_subset(all_filenames, &quot;FreeLivingSyms&quot;) hostval_filenames &lt;- str_subset(all_filenames, &quot;HostVals&quot;) induction_filenames &lt;- str_subset(all_filenames, &quot;InductionChance&quot;) lysischance_filenames &lt;- str_subset(all_filenames, &quot;LysisChance&quot;) phagevals_filenames &lt;- str_subset(all_filenames, &quot;SymVals&quot;) Combine time series data for all subsets of datafiles freeliving &lt;- combine_time_data(freeliving_filenames, folder, treatments) hostvals &lt;- combine_time_data(hostval_filenames, folder, treatments) inductionchances &lt;- combine_time_data(induction_filenames, folder, treatments) lysischances &lt;- combine_time_data(lysischance_filenames, folder, treatments) phagevals &lt;- combine_time_data(phagevals_filenames, folder, treatments) Rearrange time series data into stacked histogram data induction_histdata &lt;- combine_histogram_data(inductionchances, induction_separate_by, induction_histogram_bins) lysis_histdata &lt;- combine_histogram_data(lysischances, lysis_separate_by, lysis_histogram_bins) 6.3 Generate Graphs 6.3.1 Host graphs Host count hostcount_plot &lt;- ggplot(data=hostvals, aes(x=update, y=count, group=PLR, colour=PLR)) + ylab(&quot;Host Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostcount_plot + facet_wrap(~COI) Host cfu count hostcount_cfu_plot &lt;- ggplot(data=hostvals, aes(x=update, y=cfu_count, group=PLR, colour=PLR)) + ylab(&quot;Host CFU Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostcount_cfu_plot + facet_wrap(~COI) Host uninfected count host_uninfected_plot &lt;- ggplot(data=hostvals, aes(x=update, y=uninfected_host_count, group=PLR, colour=PLR)) + ylab(&quot;Uninfected Host Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) host_uninfected_plot + facet_wrap(~COI) Host int vals hostvals_plot &lt;- ggplot(data=hostvals, aes(x=update, y=mean_intval, group=PLR, colour=PLR)) + ylab(&quot;Mean Host Interaction Value&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostvals_plot + facet_wrap(~COI) ## Warning: Removed 2825 rows containing non-finite values (stat_summary). 6.3.2 Phage graphs Phage count phagecount_plot &lt;- ggplot(data=lysischances, aes(x=update, y=count, group=PLR, color=PLR)) + ylab(&quot;Phage count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(lysischances$PLR))) + scale_fill_manual(values=viridis(nlevels(lysischances$PLR))) phagecount_plot + facet_wrap(~COI) Phage int val phageintval_plot &lt;- ggplot(data=phagevals, aes(x=update, y=mean_intval, group=PLR, color=PLR)) + ylab(&quot;Phage Interaction value&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(phagevals$PLR))) + scale_fill_manual(values=viridis(nlevels(phagevals$PLR))) phageintval_plot + facet_wrap(~COI) Chance of lysis lysischances &lt;- lysischances %&gt;% mutate(starting_ind = as.factor(ifelse(COI == &quot;COI 0.0&quot;, &quot;Starting Induction Chance 0.0&quot;, &quot;Starting Induction Chance 0.1&quot;))) %&gt;% mutate(ProphageDeathRate = as.factor(ifelse(PLR == &quot;PLR 0.0&quot;, &quot;0.0&quot;, ifelse(PLR == &quot;PLR 0.025&quot;, &quot;0.025&quot;, &quot;0.05&quot;)))) lysischances_plot &lt;- ggplot(data=lysischances, aes(x=update, y=mean_lysischance, group=ProphageDeathRate, color=ProphageDeathRate)) + ylab(&quot;Mean Chance of Lysis&quot;) + xlab(&quot;Evolutionary Time (Updates)&quot;) + stat_summary(aes(color=ProphageDeathRate, fill=ProphageDeathRate), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(lysischances$ProphageDeathRate))) + scale_fill_manual(values=viridis(nlevels(lysischances$ProphageDeathRate))) lysischances_plot + facet_wrap(~starting_ind) Chance of induction inductionchances_plot &lt;- ggplot(data=inductionchances, aes(x=update, y=mean_inductionchance, group=PLR, color=PLR)) + ylab(&quot;Mean chance of induction&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(inductionchances$PLR))) + scale_fill_manual(values=viridis(nlevels(inductionchances$PLR))) inductionchances_plot + facet_wrap(~COI) 6.3.3 Stacked Histograms Chance of lysis stacked histogram lysischance_stackedhistogram &lt;- ggplot(lysis_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Phage with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Chance of Lysis\\n Phenotypes&quot;,values=viridis(nlevels(lysis_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) lysischance_stackedhistogram Chance of induction stacked histogram inductionchance_stackedhistogram &lt;- ggplot(induction_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Phage with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Chance of Induction\\n Phenotypes&quot;, values=viridis(nlevels(induction_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) inductionchance_stackedhistogram "],["induction-and-benefit-with-non-random-starting-incorporation-vals.html", "Chapter 7 Induction and Benefit with Non-Random Starting Incorporation Vals 7.1 Gather Settings and Treatments 7.2 Munge Data 7.3 Create Graphs", " Chapter 7 Induction and Benefit with Non-Random Starting Incorporation Vals 7.1 Gather Settings and Treatments General settings folder &lt;- &quot;Data/InductionAndBenefit_NonRandomIncVals/&quot; #Folder where datafiles are treatments &lt;- c(&quot;PLR&quot;, &quot;PIV&quot;) #Names of the treatments being tested - should match what is in filenames Stacked histogram settings induction_separate_by &lt;- &quot;PLR&quot; #Facet wrap induction stacked histogram by Prophage Loss Rate #How induction stacked histogram bins should be collapsed and renamed induction_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Very low induction)&quot;, Hist_0.1 = &quot;0 to 0.2 (Very low induction)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Moderately low induction)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Moderately low induction)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Moderate induction)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Moderate induction)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Moderately high induction)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Moderately high induction)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Very high induction)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Very high induction)&quot;) lysis_separate_by &lt;- &quot;PLR&quot; #Facet wrap lysis chance stacked histogram by Prophage Loss Rate #How lysis chance stacked histogram bins should be collapsed and renamed lysis_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Highly lysogenic)&quot;, Hist_0.1 = &quot;0 to 0.2 (Highly lysogenic)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Moderately lysogenic)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Moderately lysogenic)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Temperate)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Temperate)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Moderately lytic)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Moderately lytic)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Highly lytic)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Highly lytic)&quot;) incorp_diff_separate_by &lt;- &quot;PLR&quot; incorp_diff_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Highly beneficial)&quot;, Hist_0.1 = &quot;0 to 0.2 (Highly beneficial)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Moderately beneficial)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Moderately beneficial)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Neutral)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Neutral)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Moderately detrimental)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Moderately detrimental)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Highly detrimental)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Highly detrimental)&quot;) 7.2 Munge Data Gather filenames all_filenames &lt;- list.files(folder) freeliving_filenames &lt;- str_subset(all_filenames, &quot;FreeLivingSyms&quot;) hostval_filenames &lt;- str_subset(all_filenames, &quot;HostVals&quot;) incvaldiffs_filenames &lt;- str_subset(all_filenames, &quot;IncValDifferences&quot;) induction_filenames &lt;- str_subset(all_filenames, &quot;InductionChance&quot;) lysischance_filenames &lt;- str_subset(all_filenames, &quot;LysisChance&quot;) phagevals_filenames &lt;- str_subset(all_filenames, &quot;SymVals&quot;) Combine time series data for all subsets of datafiles freeliving &lt;- combine_time_data(freeliving_filenames, folder, treatments) hostvals &lt;- combine_time_data(hostval_filenames, folder, treatments) incvalsdiffs &lt;- combine_time_data(incvaldiffs_filenames, folder, treatments) inductionchances &lt;- combine_time_data(induction_filenames, folder, treatments) lysischances &lt;- combine_time_data(lysischance_filenames, folder, treatments) phagevals &lt;- combine_time_data(phagevals_filenames, folder, treatments) Rearrange time series data into stacked histogram data induction_histdata &lt;- combine_histogram_data(inductionchances, induction_separate_by, induction_histogram_bins) lysis_histdata &lt;- combine_histogram_data(lysischances, lysis_separate_by, lysis_histogram_bins) incorp_diff_histdata &lt;- combine_histogram_data(incvalsdiffs, incorp_diff_separate_by, incorp_diff_histogram_bins) 7.3 Create Graphs 7.3.1 Host graphs Host count hostcount_plot &lt;- ggplot(data=hostvals, aes(x=update, y=count, group=PLR, colour=PLR)) + ylab(&quot;Host Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostcount_plot + facet_wrap(~PIV) Host cfu count hostcount_cfu_plot &lt;- ggplot(data=hostvals, aes(x=update, y=cfu_count, group=PLR, colour=PLR)) + ylab(&quot;Host CFU Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostcount_cfu_plot + facet_wrap(~PIV) Host uninfected count host_uninfected_plot &lt;- ggplot(data=hostvals, aes(x=update, y=uninfected_host_count, group=PLR, colour=PLR)) + ylab(&quot;Uninfected Host Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) host_uninfected_plot + facet_wrap(~PIV) Host int vals hostvals_plot &lt;- ggplot(data=hostvals, aes(x=update, y=mean_intval, group=PLR, colour=PLR)) + ylab(&quot;Mean Host Interaction Value&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostvals_plot + facet_wrap(~PIV) ## Warning: Removed 24893 rows containing non-finite values (stat_summary). 7.3.2 Phage graphs Phage count phagecount_plot &lt;- ggplot(data=lysischances, aes(x=update, y=count, group=PLR, color=PLR)) + ylab(&quot;Phage count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(lysischances$PLR))) + scale_fill_manual(values=viridis(nlevels(lysischances$PLR))) phagecount_plot + facet_wrap(~PIV) Phage int val phageintval_plot &lt;- ggplot(data=phagevals, aes(x=update, y=mean_intval, group=PLR, color=PLR)) + ylab(&quot;Phage Interaction value&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(phagevals$PLR))) + scale_fill_manual(values=viridis(nlevels(phagevals$PLR))) phageintval_plot + facet_wrap(~PIV) Chance of lysis lysischances &lt;- lysischances %&gt;% mutate(phage_type = as.factor(ifelse(PIV == &quot;PIV 0.0&quot;, &quot;A - Harmful Phage&quot;, ifelse(PIV == &quot;PIV 0.5&quot;, &quot;B - Neutral Phage&quot;, &quot;C - Beneficial Phage&quot;)))) %&gt;% mutate(ProphageDeathRate = as.factor(ifelse(PLR == &quot;PLR 0.0&quot;, &quot;0.0&quot;, ifelse(PLR == &quot;PLR 0.025&quot;, &quot;0.025&quot;, &quot;0.05&quot;)))) lysischances_plot &lt;- ggplot(data=lysischances, aes(x=update, y=mean_lysischance, group=ProphageDeathRate, color=ProphageDeathRate)) + ylab(&quot;Mean Chance of Lysis&quot;) + xlab(&quot;Evolutionary Time (Updates)&quot;) + stat_summary(aes(color=ProphageDeathRate, fill=ProphageDeathRate), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(lysischances$ProphageDeathRate))) + scale_fill_manual(values=viridis(nlevels(lysischances$ProphageDeathRate))) lysischances_plot + facet_wrap(~phage_type) Chance of induction inductionchances_plot &lt;- ggplot(data=inductionchances, aes(x=update, y=mean_inductionchance, group=PLR, color=PLR)) + ylab(&quot;Mean chance of induction&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(inductionchances$PLR))) + scale_fill_manual(values=viridis(nlevels(inductionchances$PLR))) inductionchances_plot + facet_wrap(~PIV) Mean difference in incorporation vals incvalsdiffs &lt;- incvalsdiffs %&gt;% mutate(phage_type = as.factor(ifelse(PIV == &quot;PIV 0.0&quot;, &quot;A - Harmful Phage&quot;, ifelse(PIV == &quot;PIV 0.5&quot;, &quot;B - Neutral Phage&quot;, &quot;C - Beneficial Phage&quot;)))) %&gt;% mutate(ProphageDeathRate = as.factor(ifelse(PLR == &quot;PLR 0.0&quot;, &quot;0.0&quot;, ifelse(PLR == &quot;PLR 0.025&quot;, &quot;0.025&quot;, &quot;0.05&quot;)))) incorp_diff_plot &lt;- ggplot(data=incvalsdiffs, aes(x=update, y=mean_incval_difference), group=ProphageDeathRate, color=ProphageDeathRate) + ylab(&quot;Mean Phage-Host Incompatibility&quot;) + xlab(&quot;Evolutionary Time (Updates)&quot;) + stat_summary(aes(color=ProphageDeathRate, fill=ProphageDeathRate), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(incvalsdiffs$ProphageDeathRate))) + scale_fill_manual(values=viridis(nlevels(incvalsdiffs$ProphageDeathRate))) incorp_diff_plot + facet_wrap(~phage_type) ## Warning: Removed 25172 rows containing non-finite values (stat_summary). 7.3.3 Stacked Histograms Chance of lysis stacked histogram lysischance_stackedhistogram &lt;- ggplot(lysis_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Phage with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Chance of Lysis\\n Phenotypes&quot;,values=viridis(nlevels(lysis_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) lysischance_stackedhistogram Chance of induction stacked histogram inductionchance_stackedhistogram &lt;- ggplot(induction_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Phage with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Chance of Induction\\n Phenotypes&quot;, values=viridis(nlevels(induction_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) inductionchance_stackedhistogram Difference in inc vals stacked histogram incorp_diff_stackedhistogram &lt;- ggplot(incorp_diff_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Phage with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Difference in \\n Incorporation Vals&quot;, values=viridis(nlevels(incorp_diff_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) incorp_diff_stackedhistogram "],["induction-and-benefit-with-random-starting-incorporation-vals.html", "Chapter 8 Induction and Benefit with Random Starting Incorporation Vals 8.1 Gather Settings and Treatments 8.2 Munge Data 8.3 Create Graphs", " Chapter 8 Induction and Benefit with Random Starting Incorporation Vals 8.1 Gather Settings and Treatments General settings folder &lt;- &quot;Data/InductionAndBenefit_RandomIncVals/&quot; #Folder where datafiles are treatments &lt;- c(&quot;PLR&quot;) #Names of the treatments being tested - should match what is in filenames Stacked histogram settings induction_separate_by &lt;- &quot;PLR&quot; #Facet wrap induction stacked histogram by Prophage Loss Rate #How induction stacked histogram bins should be collapsed and renamed induction_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Very low induction)&quot;, Hist_0.1 = &quot;0 to 0.2 (Very low induction)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Moderately low induction)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Moderately low induction)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Moderate induction)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Moderate induction)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Moderately high induction)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Moderately high induction)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Very high induction)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Very high induction)&quot;) lysis_separate_by &lt;- &quot;PLR&quot; #Facet wrap lysis chance stacked histogram by Prophage Loss Rate #How lysis chance stacked histogram bins should be collapsed and renamed lysis_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Highly lysogenic)&quot;, Hist_0.1 = &quot;0 to 0.2 (Highly lysogenic)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Moderately lysogenic)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Moderately lysogenic)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Temperate)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Temperate)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Moderately lytic)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Moderately lytic)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Highly lytic)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Highly lytic)&quot;) incorp_diff_separate_by &lt;- &quot;PLR&quot; incorp_diff_histogram_bins &lt;- c(Hist_0.0 = &quot;0 to 0.2 (Highly beneficial)&quot;, Hist_0.1 = &quot;0 to 0.2 (Highly beneficial)&quot;, Hist_0.2 = &quot;0.2 to 0.4 (Moderately beneficial)&quot;, Hist_0.3 = &quot;0.2 to 0.4 (Moderately beneficial)&quot;, Hist_0.4 = &quot;0.4 to 0.6 (Neutral)&quot;, Hist_0.5 = &quot;0.4 to 0.6 (Neutral)&quot;, Hist_0.6 = &quot;0.6 to 0.8 (Moderately detrimental)&quot;, Hist_0.7 = &quot;0.6 to 0.8 (Moderately detrimental)&quot;, Hist_0.8 = &quot;0.8 to 1.0 (Highly detrimental)&quot;, Hist_0.9 = &quot;0.8 to 1.0 (Highly detrimental)&quot;) 8.2 Munge Data Gather filenames all_filenames &lt;- list.files(folder) freeliving_filenames &lt;- str_subset(all_filenames, &quot;FreeLivingSyms&quot;) hostval_filenames &lt;- str_subset(all_filenames, &quot;HostVals&quot;) incvaldiffs_filenames &lt;- str_subset(all_filenames, &quot;IncValDifferences&quot;) induction_filenames &lt;- str_subset(all_filenames, &quot;InductionChance&quot;) lysischance_filenames &lt;- str_subset(all_filenames, &quot;LysisChance&quot;) phagevals_filenames &lt;- str_subset(all_filenames, &quot;SymVals&quot;) Combine time series data for all subsets of datafiles freeliving &lt;- combine_time_data(freeliving_filenames, folder, treatments) hostvals &lt;- combine_time_data(hostval_filenames, folder, treatments) incvalsdiffs &lt;- combine_time_data(incvaldiffs_filenames, folder, treatments) inductionchances &lt;- combine_time_data(induction_filenames, folder, treatments) lysischances &lt;- combine_time_data(lysischance_filenames, folder, treatments) phagevals &lt;- combine_time_data(phagevals_filenames, folder, treatments) Rearrange time series data into stacked histogram data induction_histdata &lt;- combine_histogram_data(inductionchances, induction_separate_by, induction_histogram_bins) lysis_histdata &lt;- combine_histogram_data(lysischances, lysis_separate_by, lysis_histogram_bins) incorp_diff_histdata &lt;- combine_histogram_data(incvalsdiffs, incorp_diff_separate_by, incorp_diff_histogram_bins) 8.3 Create Graphs 8.3.1 Host graphs Host count hostcount_plot &lt;- ggplot(data=hostvals, aes(x=update, y=count, group=PLR, colour=PLR)) + ylab(&quot;Host Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostcount_plot Host cfu count hostcount_cfu_plot &lt;- ggplot(data=hostvals, aes(x=update, y=cfu_count, group=PLR, colour=PLR)) + ylab(&quot;Host CFU Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostcount_cfu_plot Host uninfected count host_uninfected_plot &lt;- ggplot(data=hostvals, aes(x=update, y=uninfected_host_count, group=PLR, colour=PLR)) + ylab(&quot;Uninfected Host Count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) host_uninfected_plot Host int vals hostvals_plot &lt;- ggplot(data=hostvals, aes(x=update, y=mean_intval, group=PLR, colour=PLR)) + ylab(&quot;Mean Host Interaction Value&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(hostvals$PLR))) + scale_fill_manual(values=viridis(nlevels(hostvals$PLR))) hostvals_plot ## Warning: Removed 4067 rows containing non-finite values (stat_summary). 8.3.2 Phage graphs Phage count phagecount_plot &lt;- ggplot(data=lysischances, aes(x=update, y=count, group=PLR, color=PLR)) + ylab(&quot;Phage count&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(lysischances$PLR))) + scale_fill_manual(values=viridis(nlevels(lysischances$PLR))) phagecount_plot Phage int val phageintval_plot &lt;- ggplot(data=phagevals, aes(x=update, y=mean_intval, group=PLR, color=PLR)) + ylab(&quot;Phage Interaction value&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(phagevals$PLR))) + scale_fill_manual(values=viridis(nlevels(phagevals$PLR))) phageintval_plot Chance of lysis lysischances_plot &lt;- ggplot(data=lysischances, aes(x=update, y=mean_lysischance, group=PLR, color=PLR)) + ylab(&quot;Mean chance of lysis&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(lysischances$PLR))) + scale_fill_manual(values=viridis(nlevels(lysischances$PLR))) lysischances_plot Chance of induction inductionchances_plot &lt;- ggplot(data=inductionchances, aes(x=update, y=mean_inductionchance, group=PLR, color=PLR)) + ylab(&quot;Mean chance of induction&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(inductionchances$PLR))) + scale_fill_manual(values=viridis(nlevels(inductionchances$PLR))) inductionchances_plot Mean difference in incorporation vals incorp_diff_plot &lt;- ggplot(data=incvalsdiffs, aes(x=update, y=mean_incval_difference), group=PLR, color=PLR) + ylab(&quot;Mean difference in inc vals&quot;) + xlab(&quot;Updates&quot;) + stat_summary(aes(color=PLR, fill=PLR), fun.data=&quot;mean_cl_boot&quot;, geom=c(&quot;smooth&quot;), se=TRUE) + theme(panel.background = element_rect(fill=&#39;white&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + scale_colour_manual(values=viridis(nlevels(incvalsdiffs$PLR))) + scale_fill_manual(values=viridis(nlevels(incvalsdiffs$PLR))) incorp_diff_plot ## Warning: Removed 4100 rows containing non-finite values (stat_summary). 8.3.3 Stacked Histograms Chance of lysis stacked histogram lysischance_stackedhistogram &lt;- ggplot(lysis_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Phage with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Chance of Lysis\\n Phenotypes&quot;,values=viridis(nlevels(lysis_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) lysischance_stackedhistogram Chance of induction stacked histogram inductionchance_stackedhistogram &lt;- ggplot(induction_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Phage with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Chance of Induction\\n Phenotypes&quot;, values=viridis(nlevels(induction_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) inductionchance_stackedhistogram Difference in inc vals stacked histogram incorp_diff_stackedhistogram &lt;- ggplot(incorp_diff_histdata, aes(update, count)) + geom_area(aes(fill=Histogram_bins), position=&#39;stack&#39;) + ylab(&quot;Count of Phage with Phenotype&quot;) + xlab(&quot;Evolutionary time (in updates)&quot;) + scale_fill_manual(&quot;Difference in \\n Incorporation Vals&quot;, values=viridis(nlevels(incorp_diff_histdata$Histogram_bins))) + facet_wrap(~treatment) + theme(panel.background = element_rect(fill=&#39;light grey&#39;, colour=&#39;black&#39;)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) + guides(fill = guide_legend()) incorp_diff_stackedhistogram "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
